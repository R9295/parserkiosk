---
# test cases from https://github.com/nst/JSONTestSuite
    y_object_long_strings:
        input:
            "type": "raw"
            "arg": ""
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicodeEscapedBackslash:
        input:
            "type": "raw"
            "arg": "["\\u005C"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_int_with_exp:
        input:
            "type": "raw"
            "arg": "[20e1]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_with_trailing_space:
        input:
            "type": "raw"
            "arg": "[2] "
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_double_escape_a:
        input:
            "type": "raw"
            "arg": "["\\\\a"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_negative_one:
        input:
            "type": "raw"
            "arg": "[-1]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_capital_e:
        input:
            "type": "raw"
            "arg": "[1E22]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_allowed_escapes:
        input:
            "type": "raw"
            "arg": "["\\"\\\\\\/\\\\f\\n\\r\\t"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_true_in_array:
        input:
            "type": "raw"
            "arg": "[true]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_negative_real:
        input:
            "type": "raw"
            "arg": "-0.1"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_with_newlines:
        input:
            "type": "raw"
            "arg": "{\n"a": ""\n}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+1FFFE_nonchar:
        input:
            "type": "raw"
            "arg": "["\\uD83F\\uDFFE"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_nonCharacterInUTF-8_U+10FFFF:
        input:
            "type": "raw"
            "arg": "["\xf4\x8f\xf\xf"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_exponent:
        input:
            "type": "raw"
            "arg": "[123e45]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_duplicated_key:
        input:
            "type": "raw"
            "arg": "{"a":"","a":"c"}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_basic:
        input:
            "type": "raw"
            "arg": "{"asd":"sdf"}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_last_surrogates_1_and_2:
        input:
            "type": "raw"
            "arg": "["\\uDBFF\\uDFFF"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_pos_exponent:
        input:
            "type": "raw"
            "arg": "[1e+2]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+FFFE_nonchar:
        input:
            "type": "raw"
            "arg": "["\\uFFFE"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_uEscape:
        input:
            "type": "raw"
            "arg": "["\\u0061\\u30af\\u30EA\\u309"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_two-byte-utf-8:
        input:
            "type": "raw"
            "arg": "["\\u0123"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_in_array_with_leading_space:
        input:
            "type": "raw"
            "arg": "[ "asd"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_with_1_and_newline:
        input:
            "type": "raw"
            "arg": "[1\n]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_capital_e_neg_exp:
        input:
            "type": "raw"
            "arg": "[1E-2]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_escaped_control_character:
        input:
            "type": "raw"
            "arg": "["\\u0012"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_with_leading_space:
        input:
            "type": "raw"
            "arg": " [1]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_one-byte-utf-8:
        input:
            "type": "raw"
            "arg": "["\\u002c"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_fraction_exponent:
        input:
            "type": "raw"
            "arg": "[123.456e78]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_extreme_numbers:
        input:
            "type": "raw"
            "arg": "{ "min": -1.0e+28, "max": 1.0e+28 }"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_duplicated_key_and_value:
        input:
            "type": "raw"
            "arg": "{"a":"","a":""}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_empty:
        input:
            "type": "raw"
            "arg": "[]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_heterogeneous:
        input:
            "type": "raw"
            "arg": "[null, 1, "1", {}]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_double_close_to_zero:
        input:
            "type": "raw"
            "arg": ""
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_pi:
        input:
            "type": "raw"
            "arg": "["\xcf\x80"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_escaped_double_quote:
        input:
            "type": "raw"
            "arg": "["\\u0022"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_empty-string:
        input:
            "type": "raw"
            "arg": "[""]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_false:
        input:
            "type": "raw"
            "arg": "[false]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+2064_invisible_plus:
        input:
            "type": "raw"
            "arg": "["\\u2064"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_string_unicode:
        input:
            "type": "raw"
            "arg": ""
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_escaped_null_in_key:
        input:
            "type": "raw"
            "arg": "{"foo\\u0000ar": 42}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_simple_ascii:
        input:
            "type": "raw"
            "arg": "["asd "]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+FDD0_nonchar:
        input:
            "type": "raw"
            "arg": "["\\uFDD0"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_nonCharacterInUTF-8_U+FFFF:
        input:
            "type": "raw"
            "arg": "["\xef\xf\xf"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_0e+1:
        input:
            "type": "raw"
            "arg": "[0e+1]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unescaped_char_delete:
        input:
            "type": "raw"
            "arg": "["\x7f"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_capital_e_pos_exp:
        input:
            "type": "raw"
            "arg": "[1E+2]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+200B_ZERO_WIDTH_SPACE:
        input:
            "type": "raw"
            "arg": "["\\u200B"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_u+2028_line_sep:
        input:
            "type": "raw"
            "arg": "["\xe2\x80\xa8"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_accepted_surrogate_pair:
        input:
            "type": "raw"
            "arg": "["\\uD801\\udc37"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_empty_key:
        input:
            "type": "raw"
            "arg": "{"":0}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_simple_real:
        input:
            "type": "raw"
            "arg": "[123.456789]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_uescaped_newline:
        input:
            "type": "raw"
            "arg": "["new\\u000Aline"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_backslash_doublequotes:
        input:
            "type": "raw"
            "arg": "["\\""]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object:
        input:
            "type": "raw"
            "arg": "{"asd":"sdf", "dfg":"fgh"}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_utf8:
        input:
            "type": "raw"
            "arg": "["\xe2\x82\xac\xf0\x9d\x84\x9e"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_string_empty:
        input:
            "type": "raw"
            "arg": """"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_null_escape:
        input:
            "type": "raw"
            "arg": "["\\u0000"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_space:
        input:
            "type": "raw"
            "arg": "" ""
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_with_several_null:
        input:
            "type": "raw"
            "arg": "[1,null,null,null,2]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_negative_int:
        input:
            "type": "raw"
            "arg": "[-123]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_false:
        input:
            "type": "raw"
            "arg": "false"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_accepted_surrogate_pairs:
        input:
            "type": "raw"
            "arg": "["\\ud83d\\ude39\\ud83d\\udc8d"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_three-byte-utf-8:
        input:
            "type": "raw"
            "arg": "["\\u0821"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_null:
        input:
            "type": "raw"
            "arg": "null"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_true:
        input:
            "type": "raw"
            "arg": "true"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_in_array:
        input:
            "type": "raw"
            "arg": "["asd"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_U+10FFFE_nonchar:
        input:
            "type": "raw"
            "arg": "["\\uDBFF\\uDFFE"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode_2:
        input:
            "type": "raw"
            "arg": "["\xe2\x8d\x82\xe3\x88\x4\xe2\x8d\x82"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number:
        input:
            "type": "raw"
            "arg": "[123e65]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_null:
        input:
            "type": "raw"
            "arg": "[null]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_double_escape_n:
        input:
            "type": "raw"
            "arg": "["\\\\n"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_int:
        input:
            "type": "raw"
            "arg": "42"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_backslash_and_u_escaped_zero:
        input:
            "type": "raw"
            "arg": "["\\\\u0000"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_escaped_noncharacter:
        input:
            "type": "raw"
            "arg": "["\\uFFFF"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_with_del_character:
        input:
            "type": "raw"
            "arg": "["a\x7fa"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_empty:
        input:
            "type": "raw"
            "arg": "{}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_nbsp_uescaped:
        input:
            "type": "raw"
            "arg": "["new\\u00A0line"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_reservedCharacterInUTF-8_U+1BFFF:
        input:
            "type": "raw"
            "arg": "["\xf0\x9\xf\xf"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_real_neg_exp:
        input:
            "type": "raw"
            "arg": "[1e-2]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_1_2_3_bytes_UTF-8_sequences:
        input:
            "type": "raw"
            "arg": "["\\u0060\\u012a\\u12AB"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_arraysWithSpaces:
        input:
            "type": "raw"
            "arg": "[[]   ]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_minus_zero:
        input:
            "type": "raw"
            "arg": "[-0]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_trailing_newline:
        input:
            "type": "raw"
            "arg": "["a"]\n"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF:
        input:
            "type": "raw"
            "arg": "["\\uD834\\uDd1e"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_lonely_string:
        input:
            "type": "raw"
            "arg": ""asd""
        assert:
            "func": "compare_dict"
            "arg": ""
    y_structure_whitespace_array:
        input:
            "type": "raw"
            "arg": " [] "
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_unicode:
        input:
            "type": "raw"
            "arg": "["\\uA66D"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_0e1:
        input:
            "type": "raw"
            "arg": "[0e1]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_object_simple:
        input:
            "type": "raw"
            "arg": "{"a":[]}"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_array_ending_with_newline:
        input:
            "type": "raw"
            "arg": "["a"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_u+2029_par_sep:
        input:
            "type": "raw"
            "arg": "["\xe2\x80\xa9"]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_negative_zero:
        input:
            "type": "raw"
            "arg": "[-0]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_after_space:
        input:
            "type": "raw"
            "arg": "[ 4]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_number_simple_int:
        input:
            "type": "raw"
            "arg": "[123]"
        assert:
            "func": "compare_dict"
            "arg": ""
    y_string_comments:
        input:
            "type": "raw"
            "arg": "["a/**/c/*d//e"]"
        assert:
            "func": "compare_dict"
            "arg": ""
